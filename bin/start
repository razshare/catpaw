#!/usr/bin/env php
<?php
use CatPaw\Bootstrap;

require 'vendor/autoload.php';

[
    "p"             => $spawnProcessShort, 
    "spawn-process" => $spawnProcessLong, 
    "w"             => $watchShort,
    "watch"         => $watchLong,
    "f"             => $fileShort,
    "file"          => $fileLong,
    "n"             => $nameShort,
    "name"          => $nameLong,
    "s"             => $singletonsShort,
    "singletons"    => $singletonsLong,
    "v"             => $verboseShort,
    "verbose"       => $verboseLong,
] = [
    "p"             => null,
    "spawn-process" => null,
    "w"             => null,
    "watch"         => null,
    "f"             => null,
    "file"          => null,
    "n"             => null,
    "name"          => null,
    "s"             => null,
    "singletons"    => null,
    "v"             => null,
    "verbose"       => null,
    ...getopt("p::n::s::v::w::f:", [
        "file:",
        "spawn-process::",
        "name::",
        "verbose::",
        "singletons::",
        "watch::", 
    ])
];

$file         = realpath($fileLong ?? $fileShort);
$name         = $nameShort         ?? $nameLong         ?? "App";
$singletons   = $singletonsLong    ?? $singletonsShort;
$verbose      = $verboseLong       ?? $verboseShort;
$watch        = $watchLong         ?? $watchShort;
$spawnProcess = $spawnProcessLong  ?? $spawnProcessShort;

if ($singletons) {
    $singletons = realpath($singletons);
} else {
    $singletons = '';
}

if (!$verbose && null !== $verbose) {
    $verbose = true;
} else {
    $verbose = false;
}

if (!$watch && null !== $watch) {
    $watch = true;
} else {
    $watch = false;
}

if (!$spawnProcess && null !== $spawnProcess) {
    $spawnProcess = true;
} else {
    $spawnProcess = false;
}

try {
    if ($spawnProcess) {
        Bootstrap::spawn(
            start: __FILE__,
            file: $file,
            name: $name,
            singletons: $singletons,
            verbose: $verbose,
            watch: $watch,
        );
    } else {
        Bootstrap::start(
            file: $file,
            name: $name,
            singletons: $singletons,
            verbose: $verbose,
            watch: $watch,
        );
    }
} catch (Throwable $e) {
    die(join(PHP_EOL, [
        $e->getMessage(),
        $e->getTraceAsString(),
    ])).PHP_EOL;
}
